/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Contract, ContractInterface } from "../../contracts/Contract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_initialValue",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ValueChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "value",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346101fb576104798038038061001981610200565b9283398101906040818303126101fb5780516001600160401b03908181116101fb57820190601f8481840112156101fb578251938285116101d157602094601f199461006a84830187168801610200565b978289528783830101116101fb579086929160005b8281106101e7575050826000918901015201519385519283116101d157600054936001948581811c911680156101c7575b838210146101b15783811161016b575b508192841160011461010a575050819293946000926100ff575b5050600019600383901b1c191690821b176000555b5560405161025390816102268239f35b0151905038806100da565b6000808052828120918516979193925b888210610154575050838596971061013b575b505050811b016000556100ef565b015160001960f88460031b161c1916905538808061012d565b80878596829496860151815501950193019061011a565b60008052826000208480870160051c8201928588106101a8575b0160051c019086905b82811061019c5750506100c0565b6000815501869061018e565b92508192610185565b634e487b7160e01b600052602260045260246000fd5b90607f16906100b0565b634e487b7160e01b600052604160045260246000fd5b8181018501518a820186015288940161007f565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101d15760405256fe60806040818152600436101561001457600080fd5b600091823560e01c90816306fdde03146100b55750806320965255146100975780633fa4f245146100975763552410771461004e57600080fd5b346100935760203660031901126100935760207f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c5991600435908160015551908152a180f35b5080fd5b50346100935781600319360112610093576020906001549051908152f35b9190503461021957826003193601126102195782918354936001938560011c946001871696871561020f575b60209788881081146101fb5787865288929181156101dc5750600114610187575b505082939450601f801994859203011682019482861067ffffffffffffffff8711176101735785929391838652818452845191828186015281955b83871061015b5750508394508582601f949501015201168101030190f35b8681018201518988018901529581019588955061013d565b634e487b7160e01b82526041600452602482fd5b83805290915082907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8783106101c957509495508594508301018538610102565b80548684018501529183019181016101b1565b60ff191683870152509495869550151560051b84010190508538610102565b634e487b7160e01b85526022600452602485fd5b95607f16956100e1565b8280fdfea264697066735822122003e12c614a4cc04d7b9a66650de26e963c87ecb4cd1b7205d39a063788bf596164736f6c63430008180033";

type ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Contract__factory extends ContractFactory {
  constructor(...args: ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _initialValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Contract> {
    return super.deploy(
      _name,
      _initialValue,
      overrides || {}
    ) as Promise<Contract>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _initialValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _initialValue, overrides || {});
  }
  override attach(address: string): Contract {
    return super.attach(address) as Contract;
  }
  override connect(signer: Signer): Contract__factory {
    return super.connect(signer) as Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractInterface {
    return new utils.Interface(_abi) as ContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Contract {
    return new Contract(address, _abi, signerOrProvider) as Contract;
  }
}
