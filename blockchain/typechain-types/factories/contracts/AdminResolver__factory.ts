/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AdminResolver,
  AdminResolverInterface,
} from "../../contracts/AdminResolver";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "loser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BondsDistributed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "finalOutcome",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "resolutionModule",
        type: "address",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361053790816100618239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c8063715018a6146104015780638da5cb5b146103d957838163a8aa57eb14610125575063f2fde38b1461004e57600080fd5b34610121576020366003190112610121576001600160a01b0382358181169391929084900361011c5761007f6104a9565b83156100ca575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b600080fd5b8280fd5b919050346102b15760603660031901126102b157823592602480359060ff82168092036103d5576001600160a01b03926044358481169291908390036103d15761016d6104a9565b855163013cf08b60e01b8152818101899052936101009081868581885afa80156103c75789908a978b948c9261031d575b5050156102ec57853b156102e85788516319212cbf60e11b81528b8582015282868201528c81604481838b5af180156102de576102c4575b5060ff1614948a919086156102bd5780965b156102b55750945b843b156102b15781879160448c838c5195869485936330950cb560e21b85528a85015216998a8a8401525af180156102a75761028f575b50508660011b968088046002149015171561027e57887f733a19d1ca389f4706a15f67e1f85d1989aec8fa9cf01e91a76fb0fff1f0741f60808a8a8a8a8a8a8351958652602086015216908301526060820152a180f35b634e487b7160e01b89526011905287fd5b6102989061045e565b6102a3578838610227565b8880fd5b88513d84823e3d90fd5b5080fd5b9050946101f0565b81966101e8565b9b6102d460ff9d9493929461045e565b9b929091926101d6565b8a513d8f823e3d90fd5b8b80fd5b885162461bcd60e51b8152602081860152600c818701526b139bdd08191a5cdc1d5d195960a21b6044820152606490fd5b94509a5050509450803d82116103c0575b601f8101601f1916890167ffffffffffffffff81118a8210176103ae5788528801889003126102a35760208701519360ff851685036103aa578790610374888301610488565b61038060608401610488565b9661039e60e061039760c06080880151970161049c565b9c0161049c565b5090969299388061019e565b8980fd5b634e487b7160e01b8c5260418452848cfd5b503d61032e565b88513d8b823e3d90fd5b8680fd5b8480fd5b8382346102b157816003193601126102b157905490516001600160a01b039091168152602090f35b833461045b578060031936011261045b5761041a6104a9565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b67ffffffffffffffff811161047257604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361011c57565b5190811515820361011c57565b6000546001600160a01b031633036104bd57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea264697066735822122042fca24e7b0758d92a4d20b819045f44ecd498029a5eea27c106a8a877b2e41b64736f6c63430008180033";

type AdminResolverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminResolverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminResolver__factory extends ContractFactory {
  constructor(...args: AdminResolverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdminResolver> {
    return super.deploy(overrides || {}) as Promise<AdminResolver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdminResolver {
    return super.attach(address) as AdminResolver;
  }
  override connect(signer: Signer): AdminResolver__factory {
    return super.connect(signer) as AdminResolver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminResolverInterface {
    return new utils.Interface(_abi) as AdminResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminResolver {
    return new Contract(address, _abi, signerOrProvider) as AdminResolver;
  }
}
